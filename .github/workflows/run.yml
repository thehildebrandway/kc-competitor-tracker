name: Weekly IG Competitor Tracker (Keyless)

on:
  schedule:
    - cron: '0 16 * * 1'  # Mondays 08:00 PT (16:00 UTC)
  workflow_dispatch:        # also gives you a "Run workflow" button

permissions:
  contents: write   # allow the workflow to commit the CSV back to the repo

jobs:
  run-tracker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install instaloader pandas pytz python-dateutil

      - name: Run tracker (CSV only, last 30 days)
        run: |
          python - << 'PY'
          import instaloader, pandas as pd
          from datetime import datetime, timedelta

          handles = [h.strip() for h in open('competitors.csv') if h.strip()]
          L = instaloader.Instaloader(download_pictures=False, download_videos=False,
                                      save_metadata=False, compress_json=False)
          since = datetime.utcnow() - timedelta(days=30)

          rows = []
          for h in handles:
              try:
                  p = instaloader.Profile.from_username(L.context, h)
                  followers = p.followers or 0
                  for post in p.get_posts():
                      if post.date_utc < since:
                          break
                      rows.append({
                        "platform":"instagram",
                        "profile":"@"+h,
                        "post_url":f"https://www.instagram.com/p/{post.shortcode}/",
                        "published_at":post.date_utc.strftime("%Y-%m-%dT%H:%M:%SZ"),
                        "type":"reel" if post.is_video else ("carousel" if post.typename=="GraphSidecar" else "image"),
                        "caption":(post.caption or "").replace("\n"," ").strip()[:500],
                        "hook_text":" ".join(((post.caption or "").split()[:10])),
                        "likes":post.likes or 0,
                        "comments":post.comments or 0,
                        "followers_snapshot":followers,
                        "est_engagement_rate": round(((post.likes or 0)+(post.comments or 0))/followers,4) if followers else 0.0
                      })
              except Exception as e:
                  print("WARN", h, e)

          df = pd.DataFrame(rows)
          df.to_csv("posts_raw.csv", index=False)
          PY

      - name: Commit CSV to repo
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add posts_raw.csv
          git commit -m "chore: update posts_raw.csv [skip ci]" || echo "No changes to commit"
          git push
